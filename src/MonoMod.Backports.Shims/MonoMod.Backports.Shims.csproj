<Project Sdk="Microsoft.Build.NoTargets">

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <PackBuildOutput>false</PackBuildOutput>
    <IsPackagingProject>true</IsPackagingProject>
    <SkipCopyBuildProduct>false</SkipCopyBuildProduct>
    <PackageMinTfms>net35;netstandard2.0;netcoreapp2.1</PackageMinTfms>
    <EnablePackageValidation>false</EnablePackageValidation>
  </PropertyGroup>

  <PropertyGroup>
    <Description>Shims for MonoMod.Backports to redirect certain OOB packages</Description>
  </PropertyGroup>

  <ItemGroup>
    <!-- Turn off default pack inference entirely -->
    <PackInference Remove="@(PackInference)" />
  </ItemGroup>
  
  <!-- Packages we're going to shim -->
  <ItemGroup>
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="6.0.0" Shim="true" />
    <PackageReference Include="System.Memory" Version="4.6.0" Shim="true" />
    <PackageReference Include="System.Buffers" Version="4.6.0" Shim="true" /> 
    <PackageReference Include="System.ValueTuple" Version="4.6.1" Shim="true" />
    
    <!-- It seems like we can't sign shims for this, and it's a .NET Standard package, so who cares, really -->
    <!--<PackageReference Include="System.Collections.Concurrent" Version="4.3.0" Shim="true" />-->
  </ItemGroup>

  <!-- ApiCompat properly resolve backports -->
  <Target Name="AddBackportsRefForNonBuildingPack"
          BeforeTargets="AssignProjectConfiguration"
          Condition="'$(BuildProjectReferences)' == 'false' and '$(_IsPacking)' == 'true'">
    <ItemGroup>
      <ProjectReference Include="$(MMSourcePath)MonoMod.Backports\MonoMod.Backports.csproj" ReferenceOutputAssembly="true" />
    </ItemGroup>
  </Target>

</Project>
